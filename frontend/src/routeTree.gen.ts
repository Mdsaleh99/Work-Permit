/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PageAppRouteImport } from './routes/page/app'
import { Route as AuthVerifyEmailRouteImport } from './routes/auth/verify-email'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthSigninRouteImport } from './routes/auth/signin'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as CompanyMemberDashMemberRouteImport } from './routes/company-member/dash/member'
import { Route as AuthVerifyEmailSuccessVerificationTokenRouteImport } from './routes/auth/verify-email-success.$verificationToken'
import { Route as AuthResetPasswordResetTokenRouteImport } from './routes/auth/reset-password.$resetToken'

const CompanyIndexLazyRouteImport = createFileRoute('/company/')()
const CompanyMemberSigninLazyRouteImport = createFileRoute(
  '/company-member/signin',
)()
const AuthSsoCallbackLazyRouteImport = createFileRoute('/auth/sso-callback')()
const AuthCreateCompanyLazyRouteImport = createFileRoute(
  '/auth/create-company',
)()
const PageAppWorkPermitsLazyRouteImport = createFileRoute(
  '/page/app/work-permits',
)()
const PageAppUserDashboardLazyRouteImport = createFileRoute(
  '/page/app/user-dashboard',
)()
const PageAppPermitLazyRouteImport = createFileRoute('/page/app/permit')()
const PageAppObservationLazyRouteImport = createFileRoute(
  '/page/app/observation',
)()
const PageAppFormBuilderLazyRouteImport = createFileRoute(
  '/page/app/form-builder',
)()
const PageAppFleetManagementLazyRouteImport = createFileRoute(
  '/page/app/fleet-management',
)()
const PageAppDashboardLazyRouteImport = createFileRoute('/page/app/dashboard')()
const PageAppCompanyMembersLazyRouteImport = createFileRoute(
  '/page/app/company-members',
)()
const PageAppCompanyDetailsLazyRouteImport = createFileRoute(
  '/page/app/company-details',
)()
const PageAppChangePasswordLazyRouteImport = createFileRoute(
  '/page/app/change-password',
)()
const PageAppAuditLazyRouteImport = createFileRoute('/page/app/audit')()
const PageAppFormBuilderIndexLazyRouteImport = createFileRoute(
  '/page/app/form-builder/',
)()
const PageAppFormFillWorkPermitIdLazyRouteImport = createFileRoute(
  '/page/app/form-fill/$workPermitId',
)()
const PageAppFormBuilderWorkPermitIdLazyRouteImport = createFileRoute(
  '/page/app/form-builder/$workPermitId',
)()
const CompanyMemberDashMemberDashboardLazyRouteImport = createFileRoute(
  '/company-member/dash/member/dashboard',
)()
const PageAppFormBuilderViewWorkPermitIdLazyRouteImport = createFileRoute(
  '/page/app/form-builder/view/$workPermitId',
)()
const CompanyMemberDashMemberFormFillWorkPermitIdLazyRouteImport =
  createFileRoute('/company-member/dash/member/form-fill/$workPermitId')()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CompanyIndexLazyRoute = CompanyIndexLazyRouteImport.update({
  id: '/company/',
  path: '/company/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/company/index.lazy').then((d) => d.Route))
const CompanyMemberSigninLazyRoute = CompanyMemberSigninLazyRouteImport.update({
  id: '/company-member/signin',
  path: '/company-member/signin',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/company-member/signin.lazy').then((d) => d.Route),
)
const AuthSsoCallbackLazyRoute = AuthSsoCallbackLazyRouteImport.update({
  id: '/auth/sso-callback',
  path: '/auth/sso-callback',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/auth/sso-callback.lazy').then((d) => d.Route),
)
const AuthCreateCompanyLazyRoute = AuthCreateCompanyLazyRouteImport.update({
  id: '/auth/create-company',
  path: '/auth/create-company',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/auth/create-company.lazy').then((d) => d.Route),
)
const PageAppRoute = PageAppRouteImport.update({
  id: '/page/app',
  path: '/page/app',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerifyEmailRoute = AuthVerifyEmailRouteImport.update({
  id: '/auth/verify-email',
  path: '/auth/verify-email',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const PageAppWorkPermitsLazyRoute = PageAppWorkPermitsLazyRouteImport.update({
  id: '/work-permits',
  path: '/work-permits',
  getParentRoute: () => PageAppRoute,
} as any).lazy(() =>
  import('./routes/page/app.work-permits.lazy').then((d) => d.Route),
)
const PageAppUserDashboardLazyRoute =
  PageAppUserDashboardLazyRouteImport.update({
    id: '/user-dashboard',
    path: '/user-dashboard',
    getParentRoute: () => PageAppRoute,
  } as any).lazy(() =>
    import('./routes/page/app.user-dashboard.lazy').then((d) => d.Route),
  )
const PageAppPermitLazyRoute = PageAppPermitLazyRouteImport.update({
  id: '/permit',
  path: '/permit',
  getParentRoute: () => PageAppRoute,
} as any).lazy(() =>
  import('./routes/page/app.permit.lazy').then((d) => d.Route),
)
const PageAppObservationLazyRoute = PageAppObservationLazyRouteImport.update({
  id: '/observation',
  path: '/observation',
  getParentRoute: () => PageAppRoute,
} as any).lazy(() =>
  import('./routes/page/app.observation.lazy').then((d) => d.Route),
)
const PageAppFormBuilderLazyRoute = PageAppFormBuilderLazyRouteImport.update({
  id: '/form-builder',
  path: '/form-builder',
  getParentRoute: () => PageAppRoute,
} as any).lazy(() =>
  import('./routes/page/app.form-builder.lazy').then((d) => d.Route),
)
const PageAppFleetManagementLazyRoute =
  PageAppFleetManagementLazyRouteImport.update({
    id: '/fleet-management',
    path: '/fleet-management',
    getParentRoute: () => PageAppRoute,
  } as any).lazy(() =>
    import('./routes/page/app.fleet-management.lazy').then((d) => d.Route),
  )
const PageAppDashboardLazyRoute = PageAppDashboardLazyRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => PageAppRoute,
} as any).lazy(() =>
  import('./routes/page/app.dashboard.lazy').then((d) => d.Route),
)
const PageAppCompanyMembersLazyRoute =
  PageAppCompanyMembersLazyRouteImport.update({
    id: '/company-members',
    path: '/company-members',
    getParentRoute: () => PageAppRoute,
  } as any).lazy(() =>
    import('./routes/page/app.company-members.lazy').then((d) => d.Route),
  )
const PageAppCompanyDetailsLazyRoute =
  PageAppCompanyDetailsLazyRouteImport.update({
    id: '/company-details',
    path: '/company-details',
    getParentRoute: () => PageAppRoute,
  } as any).lazy(() =>
    import('./routes/page/app.company-details.lazy').then((d) => d.Route),
  )
const PageAppChangePasswordLazyRoute =
  PageAppChangePasswordLazyRouteImport.update({
    id: '/change-password',
    path: '/change-password',
    getParentRoute: () => PageAppRoute,
  } as any).lazy(() =>
    import('./routes/page/app.change-password.lazy').then((d) => d.Route),
  )
const PageAppAuditLazyRoute = PageAppAuditLazyRouteImport.update({
  id: '/audit',
  path: '/audit',
  getParentRoute: () => PageAppRoute,
} as any).lazy(() =>
  import('./routes/page/app.audit.lazy').then((d) => d.Route),
)
const CompanyMemberDashMemberRoute = CompanyMemberDashMemberRouteImport.update({
  id: '/company-member/dash/member',
  path: '/company-member/dash/member',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerifyEmailSuccessVerificationTokenRoute =
  AuthVerifyEmailSuccessVerificationTokenRouteImport.update({
    id: '/auth/verify-email-success/$verificationToken',
    path: '/auth/verify-email-success/$verificationToken',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthResetPasswordResetTokenRoute =
  AuthResetPasswordResetTokenRouteImport.update({
    id: '/auth/reset-password/$resetToken',
    path: '/auth/reset-password/$resetToken',
    getParentRoute: () => rootRouteImport,
  } as any)
const PageAppFormBuilderIndexLazyRoute =
  PageAppFormBuilderIndexLazyRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PageAppFormBuilderLazyRoute,
  } as any).lazy(() =>
    import('./routes/page/app.form-builder.index.lazy').then((d) => d.Route),
  )
const PageAppFormFillWorkPermitIdLazyRoute =
  PageAppFormFillWorkPermitIdLazyRouteImport.update({
    id: '/form-fill/$workPermitId',
    path: '/form-fill/$workPermitId',
    getParentRoute: () => PageAppRoute,
  } as any).lazy(() =>
    import('./routes/page/app.form-fill.$workPermitId.lazy').then(
      (d) => d.Route,
    ),
  )
const PageAppFormBuilderWorkPermitIdLazyRoute =
  PageAppFormBuilderWorkPermitIdLazyRouteImport.update({
    id: '/$workPermitId',
    path: '/$workPermitId',
    getParentRoute: () => PageAppFormBuilderLazyRoute,
  } as any).lazy(() =>
    import('./routes/page/app.form-builder.$workPermitId.lazy').then(
      (d) => d.Route,
    ),
  )
const CompanyMemberDashMemberDashboardLazyRoute =
  CompanyMemberDashMemberDashboardLazyRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => CompanyMemberDashMemberRoute,
  } as any).lazy(() =>
    import('./routes/company-member/dash/member.dashboard.lazy').then(
      (d) => d.Route,
    ),
  )
const PageAppFormBuilderViewWorkPermitIdLazyRoute =
  PageAppFormBuilderViewWorkPermitIdLazyRouteImport.update({
    id: '/view/$workPermitId',
    path: '/view/$workPermitId',
    getParentRoute: () => PageAppFormBuilderLazyRoute,
  } as any).lazy(() =>
    import('./routes/page/app.form-builder.view.$workPermitId.lazy').then(
      (d) => d.Route,
    ),
  )
const CompanyMemberDashMemberFormFillWorkPermitIdLazyRoute =
  CompanyMemberDashMemberFormFillWorkPermitIdLazyRouteImport.update({
    id: '/form-fill/$workPermitId',
    path: '/form-fill/$workPermitId',
    getParentRoute: () => CompanyMemberDashMemberRoute,
  } as any).lazy(() =>
    import(
      './routes/company-member/dash/member.form-fill.$workPermitId.lazy'
    ).then((d) => d.Route),
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/page/app': typeof PageAppRouteWithChildren
  '/auth/create-company': typeof AuthCreateCompanyLazyRoute
  '/auth/sso-callback': typeof AuthSsoCallbackLazyRoute
  '/company-member/signin': typeof CompanyMemberSigninLazyRoute
  '/company': typeof CompanyIndexLazyRoute
  '/auth/reset-password/$resetToken': typeof AuthResetPasswordResetTokenRoute
  '/auth/verify-email-success/$verificationToken': typeof AuthVerifyEmailSuccessVerificationTokenRoute
  '/company-member/dash/member': typeof CompanyMemberDashMemberRouteWithChildren
  '/page/app/audit': typeof PageAppAuditLazyRoute
  '/page/app/change-password': typeof PageAppChangePasswordLazyRoute
  '/page/app/company-details': typeof PageAppCompanyDetailsLazyRoute
  '/page/app/company-members': typeof PageAppCompanyMembersLazyRoute
  '/page/app/dashboard': typeof PageAppDashboardLazyRoute
  '/page/app/fleet-management': typeof PageAppFleetManagementLazyRoute
  '/page/app/form-builder': typeof PageAppFormBuilderLazyRouteWithChildren
  '/page/app/observation': typeof PageAppObservationLazyRoute
  '/page/app/permit': typeof PageAppPermitLazyRoute
  '/page/app/user-dashboard': typeof PageAppUserDashboardLazyRoute
  '/page/app/work-permits': typeof PageAppWorkPermitsLazyRoute
  '/company-member/dash/member/dashboard': typeof CompanyMemberDashMemberDashboardLazyRoute
  '/page/app/form-builder/$workPermitId': typeof PageAppFormBuilderWorkPermitIdLazyRoute
  '/page/app/form-fill/$workPermitId': typeof PageAppFormFillWorkPermitIdLazyRoute
  '/page/app/form-builder/': typeof PageAppFormBuilderIndexLazyRoute
  '/company-member/dash/member/form-fill/$workPermitId': typeof CompanyMemberDashMemberFormFillWorkPermitIdLazyRoute
  '/page/app/form-builder/view/$workPermitId': typeof PageAppFormBuilderViewWorkPermitIdLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/page/app': typeof PageAppRouteWithChildren
  '/auth/create-company': typeof AuthCreateCompanyLazyRoute
  '/auth/sso-callback': typeof AuthSsoCallbackLazyRoute
  '/company-member/signin': typeof CompanyMemberSigninLazyRoute
  '/company': typeof CompanyIndexLazyRoute
  '/auth/reset-password/$resetToken': typeof AuthResetPasswordResetTokenRoute
  '/auth/verify-email-success/$verificationToken': typeof AuthVerifyEmailSuccessVerificationTokenRoute
  '/company-member/dash/member': typeof CompanyMemberDashMemberRouteWithChildren
  '/page/app/audit': typeof PageAppAuditLazyRoute
  '/page/app/change-password': typeof PageAppChangePasswordLazyRoute
  '/page/app/company-details': typeof PageAppCompanyDetailsLazyRoute
  '/page/app/company-members': typeof PageAppCompanyMembersLazyRoute
  '/page/app/dashboard': typeof PageAppDashboardLazyRoute
  '/page/app/fleet-management': typeof PageAppFleetManagementLazyRoute
  '/page/app/observation': typeof PageAppObservationLazyRoute
  '/page/app/permit': typeof PageAppPermitLazyRoute
  '/page/app/user-dashboard': typeof PageAppUserDashboardLazyRoute
  '/page/app/work-permits': typeof PageAppWorkPermitsLazyRoute
  '/company-member/dash/member/dashboard': typeof CompanyMemberDashMemberDashboardLazyRoute
  '/page/app/form-builder/$workPermitId': typeof PageAppFormBuilderWorkPermitIdLazyRoute
  '/page/app/form-fill/$workPermitId': typeof PageAppFormFillWorkPermitIdLazyRoute
  '/page/app/form-builder': typeof PageAppFormBuilderIndexLazyRoute
  '/company-member/dash/member/form-fill/$workPermitId': typeof CompanyMemberDashMemberFormFillWorkPermitIdLazyRoute
  '/page/app/form-builder/view/$workPermitId': typeof PageAppFormBuilderViewWorkPermitIdLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/page/app': typeof PageAppRouteWithChildren
  '/auth/create-company': typeof AuthCreateCompanyLazyRoute
  '/auth/sso-callback': typeof AuthSsoCallbackLazyRoute
  '/company-member/signin': typeof CompanyMemberSigninLazyRoute
  '/company/': typeof CompanyIndexLazyRoute
  '/auth/reset-password/$resetToken': typeof AuthResetPasswordResetTokenRoute
  '/auth/verify-email-success/$verificationToken': typeof AuthVerifyEmailSuccessVerificationTokenRoute
  '/company-member/dash/member': typeof CompanyMemberDashMemberRouteWithChildren
  '/page/app/audit': typeof PageAppAuditLazyRoute
  '/page/app/change-password': typeof PageAppChangePasswordLazyRoute
  '/page/app/company-details': typeof PageAppCompanyDetailsLazyRoute
  '/page/app/company-members': typeof PageAppCompanyMembersLazyRoute
  '/page/app/dashboard': typeof PageAppDashboardLazyRoute
  '/page/app/fleet-management': typeof PageAppFleetManagementLazyRoute
  '/page/app/form-builder': typeof PageAppFormBuilderLazyRouteWithChildren
  '/page/app/observation': typeof PageAppObservationLazyRoute
  '/page/app/permit': typeof PageAppPermitLazyRoute
  '/page/app/user-dashboard': typeof PageAppUserDashboardLazyRoute
  '/page/app/work-permits': typeof PageAppWorkPermitsLazyRoute
  '/company-member/dash/member/dashboard': typeof CompanyMemberDashMemberDashboardLazyRoute
  '/page/app/form-builder/$workPermitId': typeof PageAppFormBuilderWorkPermitIdLazyRoute
  '/page/app/form-fill/$workPermitId': typeof PageAppFormFillWorkPermitIdLazyRoute
  '/page/app/form-builder/': typeof PageAppFormBuilderIndexLazyRoute
  '/company-member/dash/member/form-fill/$workPermitId': typeof CompanyMemberDashMemberFormFillWorkPermitIdLazyRoute
  '/page/app/form-builder/view/$workPermitId': typeof PageAppFormBuilderViewWorkPermitIdLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/forgot-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/auth/verify-email'
    | '/page/app'
    | '/auth/create-company'
    | '/auth/sso-callback'
    | '/company-member/signin'
    | '/company'
    | '/auth/reset-password/$resetToken'
    | '/auth/verify-email-success/$verificationToken'
    | '/company-member/dash/member'
    | '/page/app/audit'
    | '/page/app/change-password'
    | '/page/app/company-details'
    | '/page/app/company-members'
    | '/page/app/dashboard'
    | '/page/app/fleet-management'
    | '/page/app/form-builder'
    | '/page/app/observation'
    | '/page/app/permit'
    | '/page/app/user-dashboard'
    | '/page/app/work-permits'
    | '/company-member/dash/member/dashboard'
    | '/page/app/form-builder/$workPermitId'
    | '/page/app/form-fill/$workPermitId'
    | '/page/app/form-builder/'
    | '/company-member/dash/member/form-fill/$workPermitId'
    | '/page/app/form-builder/view/$workPermitId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/forgot-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/auth/verify-email'
    | '/page/app'
    | '/auth/create-company'
    | '/auth/sso-callback'
    | '/company-member/signin'
    | '/company'
    | '/auth/reset-password/$resetToken'
    | '/auth/verify-email-success/$verificationToken'
    | '/company-member/dash/member'
    | '/page/app/audit'
    | '/page/app/change-password'
    | '/page/app/company-details'
    | '/page/app/company-members'
    | '/page/app/dashboard'
    | '/page/app/fleet-management'
    | '/page/app/observation'
    | '/page/app/permit'
    | '/page/app/user-dashboard'
    | '/page/app/work-permits'
    | '/company-member/dash/member/dashboard'
    | '/page/app/form-builder/$workPermitId'
    | '/page/app/form-fill/$workPermitId'
    | '/page/app/form-builder'
    | '/company-member/dash/member/form-fill/$workPermitId'
    | '/page/app/form-builder/view/$workPermitId'
  id:
    | '__root__'
    | '/'
    | '/auth/forgot-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/auth/verify-email'
    | '/page/app'
    | '/auth/create-company'
    | '/auth/sso-callback'
    | '/company-member/signin'
    | '/company/'
    | '/auth/reset-password/$resetToken'
    | '/auth/verify-email-success/$verificationToken'
    | '/company-member/dash/member'
    | '/page/app/audit'
    | '/page/app/change-password'
    | '/page/app/company-details'
    | '/page/app/company-members'
    | '/page/app/dashboard'
    | '/page/app/fleet-management'
    | '/page/app/form-builder'
    | '/page/app/observation'
    | '/page/app/permit'
    | '/page/app/user-dashboard'
    | '/page/app/work-permits'
    | '/company-member/dash/member/dashboard'
    | '/page/app/form-builder/$workPermitId'
    | '/page/app/form-fill/$workPermitId'
    | '/page/app/form-builder/'
    | '/company-member/dash/member/form-fill/$workPermitId'
    | '/page/app/form-builder/view/$workPermitId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthVerifyEmailRoute: typeof AuthVerifyEmailRoute
  PageAppRoute: typeof PageAppRouteWithChildren
  AuthCreateCompanyLazyRoute: typeof AuthCreateCompanyLazyRoute
  AuthSsoCallbackLazyRoute: typeof AuthSsoCallbackLazyRoute
  CompanyMemberSigninLazyRoute: typeof CompanyMemberSigninLazyRoute
  CompanyIndexLazyRoute: typeof CompanyIndexLazyRoute
  AuthResetPasswordResetTokenRoute: typeof AuthResetPasswordResetTokenRoute
  AuthVerifyEmailSuccessVerificationTokenRoute: typeof AuthVerifyEmailSuccessVerificationTokenRoute
  CompanyMemberDashMemberRoute: typeof CompanyMemberDashMemberRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/company/': {
      id: '/company/'
      path: '/company'
      fullPath: '/company'
      preLoaderRoute: typeof CompanyIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/company-member/signin': {
      id: '/company-member/signin'
      path: '/company-member/signin'
      fullPath: '/company-member/signin'
      preLoaderRoute: typeof CompanyMemberSigninLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sso-callback': {
      id: '/auth/sso-callback'
      path: '/auth/sso-callback'
      fullPath: '/auth/sso-callback'
      preLoaderRoute: typeof AuthSsoCallbackLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/create-company': {
      id: '/auth/create-company'
      path: '/auth/create-company'
      fullPath: '/auth/create-company'
      preLoaderRoute: typeof AuthCreateCompanyLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/page/app': {
      id: '/page/app'
      path: '/page/app'
      fullPath: '/page/app'
      preLoaderRoute: typeof PageAppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/verify-email': {
      id: '/auth/verify-email'
      path: '/auth/verify-email'
      fullPath: '/auth/verify-email'
      preLoaderRoute: typeof AuthVerifyEmailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/page/app/work-permits': {
      id: '/page/app/work-permits'
      path: '/work-permits'
      fullPath: '/page/app/work-permits'
      preLoaderRoute: typeof PageAppWorkPermitsLazyRouteImport
      parentRoute: typeof PageAppRoute
    }
    '/page/app/user-dashboard': {
      id: '/page/app/user-dashboard'
      path: '/user-dashboard'
      fullPath: '/page/app/user-dashboard'
      preLoaderRoute: typeof PageAppUserDashboardLazyRouteImport
      parentRoute: typeof PageAppRoute
    }
    '/page/app/permit': {
      id: '/page/app/permit'
      path: '/permit'
      fullPath: '/page/app/permit'
      preLoaderRoute: typeof PageAppPermitLazyRouteImport
      parentRoute: typeof PageAppRoute
    }
    '/page/app/observation': {
      id: '/page/app/observation'
      path: '/observation'
      fullPath: '/page/app/observation'
      preLoaderRoute: typeof PageAppObservationLazyRouteImport
      parentRoute: typeof PageAppRoute
    }
    '/page/app/form-builder': {
      id: '/page/app/form-builder'
      path: '/form-builder'
      fullPath: '/page/app/form-builder'
      preLoaderRoute: typeof PageAppFormBuilderLazyRouteImport
      parentRoute: typeof PageAppRoute
    }
    '/page/app/fleet-management': {
      id: '/page/app/fleet-management'
      path: '/fleet-management'
      fullPath: '/page/app/fleet-management'
      preLoaderRoute: typeof PageAppFleetManagementLazyRouteImport
      parentRoute: typeof PageAppRoute
    }
    '/page/app/dashboard': {
      id: '/page/app/dashboard'
      path: '/dashboard'
      fullPath: '/page/app/dashboard'
      preLoaderRoute: typeof PageAppDashboardLazyRouteImport
      parentRoute: typeof PageAppRoute
    }
    '/page/app/company-members': {
      id: '/page/app/company-members'
      path: '/company-members'
      fullPath: '/page/app/company-members'
      preLoaderRoute: typeof PageAppCompanyMembersLazyRouteImport
      parentRoute: typeof PageAppRoute
    }
    '/page/app/company-details': {
      id: '/page/app/company-details'
      path: '/company-details'
      fullPath: '/page/app/company-details'
      preLoaderRoute: typeof PageAppCompanyDetailsLazyRouteImport
      parentRoute: typeof PageAppRoute
    }
    '/page/app/change-password': {
      id: '/page/app/change-password'
      path: '/change-password'
      fullPath: '/page/app/change-password'
      preLoaderRoute: typeof PageAppChangePasswordLazyRouteImport
      parentRoute: typeof PageAppRoute
    }
    '/page/app/audit': {
      id: '/page/app/audit'
      path: '/audit'
      fullPath: '/page/app/audit'
      preLoaderRoute: typeof PageAppAuditLazyRouteImport
      parentRoute: typeof PageAppRoute
    }
    '/company-member/dash/member': {
      id: '/company-member/dash/member'
      path: '/company-member/dash/member'
      fullPath: '/company-member/dash/member'
      preLoaderRoute: typeof CompanyMemberDashMemberRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/verify-email-success/$verificationToken': {
      id: '/auth/verify-email-success/$verificationToken'
      path: '/auth/verify-email-success/$verificationToken'
      fullPath: '/auth/verify-email-success/$verificationToken'
      preLoaderRoute: typeof AuthVerifyEmailSuccessVerificationTokenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password/$resetToken': {
      id: '/auth/reset-password/$resetToken'
      path: '/auth/reset-password/$resetToken'
      fullPath: '/auth/reset-password/$resetToken'
      preLoaderRoute: typeof AuthResetPasswordResetTokenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/page/app/form-builder/': {
      id: '/page/app/form-builder/'
      path: '/'
      fullPath: '/page/app/form-builder/'
      preLoaderRoute: typeof PageAppFormBuilderIndexLazyRouteImport
      parentRoute: typeof PageAppFormBuilderLazyRoute
    }
    '/page/app/form-fill/$workPermitId': {
      id: '/page/app/form-fill/$workPermitId'
      path: '/form-fill/$workPermitId'
      fullPath: '/page/app/form-fill/$workPermitId'
      preLoaderRoute: typeof PageAppFormFillWorkPermitIdLazyRouteImport
      parentRoute: typeof PageAppRoute
    }
    '/page/app/form-builder/$workPermitId': {
      id: '/page/app/form-builder/$workPermitId'
      path: '/$workPermitId'
      fullPath: '/page/app/form-builder/$workPermitId'
      preLoaderRoute: typeof PageAppFormBuilderWorkPermitIdLazyRouteImport
      parentRoute: typeof PageAppFormBuilderLazyRoute
    }
    '/company-member/dash/member/dashboard': {
      id: '/company-member/dash/member/dashboard'
      path: '/dashboard'
      fullPath: '/company-member/dash/member/dashboard'
      preLoaderRoute: typeof CompanyMemberDashMemberDashboardLazyRouteImport
      parentRoute: typeof CompanyMemberDashMemberRoute
    }
    '/page/app/form-builder/view/$workPermitId': {
      id: '/page/app/form-builder/view/$workPermitId'
      path: '/view/$workPermitId'
      fullPath: '/page/app/form-builder/view/$workPermitId'
      preLoaderRoute: typeof PageAppFormBuilderViewWorkPermitIdLazyRouteImport
      parentRoute: typeof PageAppFormBuilderLazyRoute
    }
    '/company-member/dash/member/form-fill/$workPermitId': {
      id: '/company-member/dash/member/form-fill/$workPermitId'
      path: '/form-fill/$workPermitId'
      fullPath: '/company-member/dash/member/form-fill/$workPermitId'
      preLoaderRoute: typeof CompanyMemberDashMemberFormFillWorkPermitIdLazyRouteImport
      parentRoute: typeof CompanyMemberDashMemberRoute
    }
  }
}

interface PageAppFormBuilderLazyRouteChildren {
  PageAppFormBuilderWorkPermitIdLazyRoute: typeof PageAppFormBuilderWorkPermitIdLazyRoute
  PageAppFormBuilderIndexLazyRoute: typeof PageAppFormBuilderIndexLazyRoute
  PageAppFormBuilderViewWorkPermitIdLazyRoute: typeof PageAppFormBuilderViewWorkPermitIdLazyRoute
}

const PageAppFormBuilderLazyRouteChildren: PageAppFormBuilderLazyRouteChildren =
  {
    PageAppFormBuilderWorkPermitIdLazyRoute:
      PageAppFormBuilderWorkPermitIdLazyRoute,
    PageAppFormBuilderIndexLazyRoute: PageAppFormBuilderIndexLazyRoute,
    PageAppFormBuilderViewWorkPermitIdLazyRoute:
      PageAppFormBuilderViewWorkPermitIdLazyRoute,
  }

const PageAppFormBuilderLazyRouteWithChildren =
  PageAppFormBuilderLazyRoute._addFileChildren(
    PageAppFormBuilderLazyRouteChildren,
  )

interface PageAppRouteChildren {
  PageAppAuditLazyRoute: typeof PageAppAuditLazyRoute
  PageAppChangePasswordLazyRoute: typeof PageAppChangePasswordLazyRoute
  PageAppCompanyDetailsLazyRoute: typeof PageAppCompanyDetailsLazyRoute
  PageAppCompanyMembersLazyRoute: typeof PageAppCompanyMembersLazyRoute
  PageAppDashboardLazyRoute: typeof PageAppDashboardLazyRoute
  PageAppFleetManagementLazyRoute: typeof PageAppFleetManagementLazyRoute
  PageAppFormBuilderLazyRoute: typeof PageAppFormBuilderLazyRouteWithChildren
  PageAppObservationLazyRoute: typeof PageAppObservationLazyRoute
  PageAppPermitLazyRoute: typeof PageAppPermitLazyRoute
  PageAppUserDashboardLazyRoute: typeof PageAppUserDashboardLazyRoute
  PageAppWorkPermitsLazyRoute: typeof PageAppWorkPermitsLazyRoute
  PageAppFormFillWorkPermitIdLazyRoute: typeof PageAppFormFillWorkPermitIdLazyRoute
}

const PageAppRouteChildren: PageAppRouteChildren = {
  PageAppAuditLazyRoute: PageAppAuditLazyRoute,
  PageAppChangePasswordLazyRoute: PageAppChangePasswordLazyRoute,
  PageAppCompanyDetailsLazyRoute: PageAppCompanyDetailsLazyRoute,
  PageAppCompanyMembersLazyRoute: PageAppCompanyMembersLazyRoute,
  PageAppDashboardLazyRoute: PageAppDashboardLazyRoute,
  PageAppFleetManagementLazyRoute: PageAppFleetManagementLazyRoute,
  PageAppFormBuilderLazyRoute: PageAppFormBuilderLazyRouteWithChildren,
  PageAppObservationLazyRoute: PageAppObservationLazyRoute,
  PageAppPermitLazyRoute: PageAppPermitLazyRoute,
  PageAppUserDashboardLazyRoute: PageAppUserDashboardLazyRoute,
  PageAppWorkPermitsLazyRoute: PageAppWorkPermitsLazyRoute,
  PageAppFormFillWorkPermitIdLazyRoute: PageAppFormFillWorkPermitIdLazyRoute,
}

const PageAppRouteWithChildren =
  PageAppRoute._addFileChildren(PageAppRouteChildren)

interface CompanyMemberDashMemberRouteChildren {
  CompanyMemberDashMemberDashboardLazyRoute: typeof CompanyMemberDashMemberDashboardLazyRoute
  CompanyMemberDashMemberFormFillWorkPermitIdLazyRoute: typeof CompanyMemberDashMemberFormFillWorkPermitIdLazyRoute
}

const CompanyMemberDashMemberRouteChildren: CompanyMemberDashMemberRouteChildren =
  {
    CompanyMemberDashMemberDashboardLazyRoute:
      CompanyMemberDashMemberDashboardLazyRoute,
    CompanyMemberDashMemberFormFillWorkPermitIdLazyRoute:
      CompanyMemberDashMemberFormFillWorkPermitIdLazyRoute,
  }

const CompanyMemberDashMemberRouteWithChildren =
  CompanyMemberDashMemberRoute._addFileChildren(
    CompanyMemberDashMemberRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthVerifyEmailRoute: AuthVerifyEmailRoute,
  PageAppRoute: PageAppRouteWithChildren,
  AuthCreateCompanyLazyRoute: AuthCreateCompanyLazyRoute,
  AuthSsoCallbackLazyRoute: AuthSsoCallbackLazyRoute,
  CompanyMemberSigninLazyRoute: CompanyMemberSigninLazyRoute,
  CompanyIndexLazyRoute: CompanyIndexLazyRoute,
  AuthResetPasswordResetTokenRoute: AuthResetPasswordResetTokenRoute,
  AuthVerifyEmailSuccessVerificationTokenRoute:
    AuthVerifyEmailSuccessVerificationTokenRoute,
  CompanyMemberDashMemberRoute: CompanyMemberDashMemberRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

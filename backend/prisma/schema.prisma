// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  SUPER_ADMIN
}

enum CompanyMemberRole {
  COMPANY_MEMBER
  MANAGER
}

enum LoginType {
  GOOGLE
  MICROSOFT
  EMAIL_PASSWORD
}

enum WorkPermitFormStatus {
  PENDING
  APPROVED
  CANCELLED
  CLOSED
}

enum WorkPermitComponentType {
  text
  checkbox
  radio
  textarea
  date
  time
  signature
  table
  header
  logo
}

model User {
  id               String    @id @default(uuid())
  name             String
  email            String    @unique
  password         String
  role             UserRole  @default(ADMIN)
  loginType LoginType @default(EMAIL_PASSWORD)
  // verifyCode       String?
  // verifyCodeExpiry DateTime?
  forgotPasswordToken String?
  forgotPasswordExpiry DateTime?
  emailVerificationToken String?
  emailVerificationExpiry DateTime?
  isEmailVerified  Boolean   @default(false)
  refreshToken     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  company        Company?
  workPermitForm WorkPermitForm[]
  workPermitDraft WorkPermitDraft[]
  // Removed: workPermitSubmission relation now references CompanyMember instead
}

model Company {
  id             String           @id @default(uuid())
  userId         String           @unique
  compName       String           @unique
  description    String?
  email          String           @unique
  mobileNo       String           @unique
  workPermitForm WorkPermitForm[]
  workPermitDraft WorkPermitDraft[]
  members        CompanyMember[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  workPermitSubmission WorkPermitSubmission[]
}

// Company members who can fill forms
model CompanyMember {
  id         String   @id @default(uuid())
  companyId  String
  
  name String
  email String @unique
  password String 
  refreshToken     String?
  role       CompanyMemberRole   @default(COMPANY_MEMBER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  company Company @relation(fields: [companyId], references: [id], onDelete: Cascade)
  // Allowed work permits this member can access
  allowedWorkPermits WorkPermitForm[]
  workPermitSubmission WorkPermitSubmission[]
  

  @@index([companyId])
}


model WorkPermitForm {
  id        String              @id @default(uuid())
  title     String
  workPermitNo String? @unique @db.VarChar(12)
  userId    String
  companyId String
  status  WorkPermitFormStatus @default(PENDING)
  formUrl   String?
  sections  WorkPermitSection[]
  submissions WorkPermitSubmission[]
  // Members allowed to access this permit
  allowedMembers CompanyMember[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id])
  company Company @relation(fields: [companyId], references: [id])

  @@index([userId])
  @@index([companyId])
}

model WorkPermitSection {
  id               String                       @id @default(uuid())
  workPermitFormId String
  title            String
  enabled          Boolean                      @default(true)
  components       WorkPermitSectionComponent[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workPermitForm WorkPermitForm @relation(fields: [workPermitFormId], references: [id], onDelete: Cascade)

  @@index([workPermitFormId])
}

model WorkPermitSectionComponent {
  id                  String                  @id @default(uuid())
  workPermitSectionId String
  label               String
  type                WorkPermitComponentType @default(text)
  required            Boolean                 @default(true)
  enabled             Boolean                 @default(true)
  options             String[]                @default([]) // by default empty array, this is a optional field so i have given default paramter empty array

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workPermitSection WorkPermitSection @relation(fields: [workPermitSectionId], references: [id], onDelete: Cascade)

  @@index([workPermitSectionId])
}


// A submission filled by a member against a WorkPermitForm
model WorkPermitSubmission {
  id               String          @id @default(uuid())
  workPermitFormId String
  companyId        String
  submittedById    String
  answers          Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workPermitForm WorkPermitForm @relation(fields: [workPermitFormId], references: [id], onDelete: Cascade)
  company        Company        @relation(fields: [companyId], references: [id], onDelete: Cascade)
  submittedBy    CompanyMember  @relation(fields: [submittedById], references: [id])

  @@index([workPermitFormId])
  @@index([companyId])
  @@index([submittedById])
}

// Draft Models for Work Permit Forms
model WorkPermitDraft {
  id        String              @id @default(uuid())
  title     String
  userId    String
  companyId String
  isAutoSave Boolean            @default(false) // true for auto-save, false for manual save
  sections  WorkPermitDraftSection[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id])
  company Company @relation(fields: [companyId], references: [id])

  @@index([userId])
  @@index([companyId])
}

model WorkPermitDraftSection {
  id               String                       @id @default(uuid())
  workPermitDraftId String
  title            String
  enabled          Boolean                      @default(true)
  components       WorkPermitDraftComponent[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workPermitDraft WorkPermitDraft @relation(fields: [workPermitDraftId], references: [id], onDelete: Cascade)

  @@index([workPermitDraftId])
}

model WorkPermitDraftComponent {
  id                  String                  @id @default(uuid())
  workPermitDraftSectionId String
  label               String
  type                WorkPermitComponentType @default(text)
  required            Boolean                 @default(true)
  enabled             Boolean                 @default(true)
  options             String[]                @default([])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workPermitDraftSection WorkPermitDraftSection @relation(fields: [workPermitDraftSectionId], references: [id], onDelete: Cascade)

  @@index([workPermitDraftSectionId])
}